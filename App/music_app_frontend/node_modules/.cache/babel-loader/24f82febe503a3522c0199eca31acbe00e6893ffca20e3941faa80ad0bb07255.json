{"ast":null,"code":"var _jsxFileName = \"E:\\\\React\\\\MusicApp\\\\music_app_frontend\\\\src\\\\components\\\\shared\\\\CloudinaryUpload.js\";\nimport { openUploadWidget } from \"../../utils/CloudinaryService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloudinaryUpload = () => {\n  const uploadImageWidget = () => {\n    let myUploadWidget = openUploadWidget({\n      cloudName: \"safafasf\",\n      uploadPreset: \"asfafas\",\n      sources: [\"local\"]\n    }, function (error, result) {\n      if (!error && result.event === \"success\") {\n        console.log(result.info);\n      } else {\n        alert(\"Could not upload\");\n        console.log(\"error\");\n      }\n    });\n    myUploadWidget.open();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"bg-white rounded-full p-4\",\n    onClick: uploadImageWidget,\n    children: \"Upload Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = CloudinaryUpload;\nexport default CloudinaryUpload;\nvar _c;\n$RefreshReg$(_c, \"CloudinaryUpload\");","map":{"version":3,"names":["openUploadWidget","jsxDEV","_jsxDEV","CloudinaryUpload","uploadImageWidget","myUploadWidget","cloudName","uploadPreset","sources","error","result","event","console","log","info","alert","open","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/React/MusicApp/music_app_frontend/src/components/shared/CloudinaryUpload.js"],"sourcesContent":["import { openUploadWidget } from \"../../utils/CloudinaryService\";\r\n\r\nconst CloudinaryUpload = () => {\r\n  const uploadImageWidget = () => {\r\n    \r\n    let myUploadWidget = openUploadWidget(\r\n      {\r\n        cloudName: \"safafasf\",\r\n        uploadPreset: \"asfafas\",\r\n        sources: [\"local\"]\r\n      },\r\n      function (error, result) {\r\n        if (!error && result.event === \"success\") {\r\n         console.log(result.info); \r\n        }else {\r\n            alert(\"Could not upload\");\r\n            console.log(\"error\");\r\n        }\r\n        \r\n      }\r\n    );\r\n    myUploadWidget.open();\r\n  };\r\n\r\n  return (\r\n    <button className=\"bg-white rounded-full p-4\" onClick={uploadImageWidget}>\r\n      Upload Image\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default CloudinaryUpload;\r\n"],"mappings":";AAAA,SAASA,gBAAgB,QAAQ,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjE,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAE9B,IAAIC,cAAc,GAAGL,gBAAgB,CACnC;MACEM,SAAS,EAAE,UAAU;MACrBC,YAAY,EAAE,SAAS;MACvBC,OAAO,EAAE,CAAC,OAAO;IACnB,CAAC,EACD,UAAUC,KAAK,EAAEC,MAAM,EAAE;MACvB,IAAI,CAACD,KAAK,IAAIC,MAAM,CAACC,KAAK,KAAK,SAAS,EAAE;QACzCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MACzB,CAAC,MAAK;QACFC,KAAK,CAAC,kBAAkB,CAAC;QACzBH,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACxB;IAEF,CACF,CAAC;IACDR,cAAc,CAACW,IAAI,CAAC,CAAC;EACvB,CAAC;EAED,oBACEd,OAAA;IAAQe,SAAS,EAAC,2BAA2B;IAACC,OAAO,EAAEd,iBAAkB;IAAAe,QAAA,EAAC;EAE1E;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA3BIrB,gBAAgB;AA6BtB,eAAeA,gBAAgB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}