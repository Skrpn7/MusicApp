{"ast":null,"code":"import { Cloudinary as CoreCloudinary, Util } from \"cloudinary-core\";\nexport const url = (publicId, options) => {\n  try {\n    const scOptions = Util.withSnakeCaseKeys(options);\n    const cl = CoreCloudinary.new();\n    return cl.url(publicId, scOptions);\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n};\nexport const openUploadWidget = (options, callback) => {\n  return window.cloudinary.openUploadWidget(options, callback);\n};","map":{"version":3,"names":["Cloudinary","CoreCloudinary","Util","url","publicId","options","scOptions","withSnakeCaseKeys","cl","new","e","console","error","openUploadWidget","callback","window","cloudinary"],"sources":["E:/React/MusicApp/music_app_frontend/src/utils/CloudinaryService.js"],"sourcesContent":["import {Cloudinary as CoreCloudinary, Util} from \"cloudinary-core\";\r\n\r\nexport const url = (publicId, options) => {\r\n    try {\r\n        const scOptions = Util.withSnakeCaseKeys(options);\r\n        const cl = CoreCloudinary.new();\r\n        return cl.url(publicId, scOptions);\r\n    } catch (e) {\r\n        console.error(e);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const openUploadWidget = (options, callback) => {\r\n    return window.cloudinary.openUploadWidget(options, callback);\r\n};"],"mappings":"AAAA,SAAQA,UAAU,IAAIC,cAAc,EAAEC,IAAI,QAAO,iBAAiB;AAElE,OAAO,MAAMC,GAAG,GAAGA,CAACC,QAAQ,EAAEC,OAAO,KAAK;EACtC,IAAI;IACA,MAAMC,SAAS,GAAGJ,IAAI,CAACK,iBAAiB,CAACF,OAAO,CAAC;IACjD,MAAMG,EAAE,GAAGP,cAAc,CAACQ,GAAG,CAAC,CAAC;IAC/B,OAAOD,EAAE,CAACL,GAAG,CAACC,QAAQ,EAAEE,SAAS,CAAC;EACtC,CAAC,CAAC,OAAOI,CAAC,EAAE;IACRC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;IAChB,OAAO,IAAI;EACf;AACJ,CAAC;AAED,OAAO,MAAMG,gBAAgB,GAAGA,CAACR,OAAO,EAAES,QAAQ,KAAK;EACnD,OAAOC,MAAM,CAACC,UAAU,CAACH,gBAAgB,CAACR,OAAO,EAAES,QAAQ,CAAC;AAChE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}